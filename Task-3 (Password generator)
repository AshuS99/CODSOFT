import random
import string

def generate_password(length=12, use_upper=True, use_lower=True, use_digits=True, use_special=True):
    if length < 4:
        raise ValueError("Password length should be at least 4 characters.")

    char_sets = []
    if use_upper:
        char_sets.append(string.ascii_uppercase)
    if use_lower:
        char_sets.append(string.ascii_lowercase)
    if use_digits:
        char_sets.append(string.digits)
    if use_special:
        char_sets.append(string.punctuation)

    if not char_sets:
        raise ValueError("At least one character set must be selected.")

    # Ensure at least one character from each selected set
    password = [random.choice(char_set) for char_set in char_sets]

    # Fill the rest of the password length
    all_chars = ''.join(char_sets)
    password += [random.choice(all_chars) for _ in range(length - len(password))]

    # Shuffle to avoid predictable patterns
    random.shuffle(password)
    return ''.join(password)

if __name__ == "__main__":
    print("Welcome to the Password Generator!")
    try:
        length = int(input("Enter password length (minimum 4): "))
        use_upper = input("Include uppercase letters? (y/n): ").strip().lower() == 'y'
        use_lower = input("Include lowercase letters? (y/n): ").strip().lower() == 'y'
        use_digits = input("Include digits? (y/n): ").strip().lower() == 'y'
        use_special = input("Include special characters? (y/n): ").strip().lower() == 'y'

        password = generate_password(length, use_upper, use_lower, use_digits, use_special)
        print(f"Generated password: {password}")
    except Exception as e:
        print(f"Error: {e}")
